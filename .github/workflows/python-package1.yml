name: Python + Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      # Install dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f Basic_flask_app/requirements.txt ]; then pip install -r Basic_flask_app/requirements.txt; fi

      # Lint code
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Run tests
      - name: Test with pytest
        run: |
          pytest

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t flask_testing_app ./Basic_flask_app

      # Run Trivy scan
      - name: Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: flask_testing_app
          format: table
          exit-code: 1
          vuln-type: os,library
          ignore-unfixed: false

      # Run Docker Scout
      - name: Docker Scout scan
        run: |
          docker scout analyze flask_testing_app

